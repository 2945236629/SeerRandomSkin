//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SeerRandomSkin.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.12.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1,2,3,4,5,6,7,8,9,29,50,104,125,164,165,166,169,170,171,172,173,174,175,181,182,1" +
            "83,191,192,193,194,195,223,224,227,278,306,309,347,351,353,438,439,445,446,447,4" +
            "48,449,454,455,468,469,470,488,489,490,497,498,499,500,501,503,507,508,509,510,5" +
            "11,512,513,514,515,516,517,518,519,520,526,527,528,529,530,531,532,533,534,535,5" +
            "36,537,538,544,545,546,564,565,566,568,569,570,583,584,590,591,601,602,603,612,6" +
            "13,614,643,644,645,658,659,660,661,694,695,696,697,698,729,760,779,780,781,782,7" +
            "83,784,796,797,798,799,801,802,803,804,809,810,811,677,678,679,820,821,833,834,8" +
            "45,846,864,865,504,505,875,878,880,881,680,681,884,886,682,683,904,905,908,686,9" +
            "22,923,926,927,928,944,945,946,947,950,956,957,960,961,962,963,964,965,970,973,9" +
            "74,977,978,979,986,987,997,998,999,1000,1002,1003,1011,1012,1017,1018,1019,1020," +
            "1021,1028,1029,1042,1043,1044,1045,1060,1061,1062,1063,1064,1086,1087,1092,1093," +
            "1108,1109,1110,1111,1114,1115,1118,1119,1120,1121,1122,1152,1153,1154,1155,1156," +
            "1157,1158,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1173,1174,1175," +
            "1176,1177,1178,1179,1180,1181,1182,1186,1187,1188,1189,1190,1191,1192,1199,1200," +
            "1201,1202,1203,1204,1211,1212,1213,1214,1215,1216,1219,1220,1222,1223,1226,1227," +
            "1230,1232,1237,1238,1239,1240,1241,1243,1244,1245,1247,1248,1249,1251,1253,1254," +
            "1255,1256,1257,1258,1259,1260,1261,1263,1264,1265,1266,1273,1274,1275,1276,1285," +
            "1286,1287,1288,1289,1290,1299,1300,1305,1306,1315,1316,1317,1320,1321,1322,1323," +
            "1326,1327,1328,1331,1332,1333,1334,1335,1336,1337,1340,1341,1346,1353,1354,1355," +
            "1356,1357,1358,1361,1372,1373,1394,1395,1400,1402,1412,1414,1419,1420,1421,1436," +
            "1437,1446,1447,1448,1449,1454,1455,1456,1460,1483,1484,1500,1501,1502,1505,1506," +
            "1518,1524,1525,1526,1527,1531,1532,1533,1534,1537,1538,1547,1548,1551,1553,1554," +
            "1555,1556,1561,1562,1565,1566,1567,1568,1569,1570,1571,1572,1579,1580,1581,1582," +
            "1587,1588,1589,1590,1597,1598,1601,1602,1603,1605,1606,1607,1608,1609,1610,1611," +
            "1612,1613,1614,1615,1616,1617,1619,1620,1621,1624,1630,1631,1632,1633,1634,1636," +
            "1637,1638,1639,1640,1641,1644,1647,1648,1649,1650,1651,1654,1655,1656,1657,1662," +
            "1667,1668,1669,1670,1671,1678,1679,1680,1681,1664,1665,1692,1693,1695,1696,1697," +
            "1698,1699,1700,1701,1706,1707,1708,1709,1710,1711,1714,1715,1716,1717,1718,1719," +
            "1722,1723,1728,1729,1730,1731,1732,1735,1736,1737,1738,1745,1746,1747,1748,1750," +
            "1751,1752,1755,1756,1759,1766,1767,1768,1772,1773,1776,1777,1780,1781,1782,1783," +
            "1784,1791,1792,1793,1794,1797,1798,1800,1801,1802,1803,1804,1806,1808,1809,1810," +
            "1811,1812,1813,1814,1815,1818,1819,1820,1821,1822,1823,1824,1825,1826,1830,1831," +
            "1832,1834,1836,1837,1840,1841,1842,1845,1846,1847,1848,1849,1850,1851,1852,1853," +
            "1854,1855,1856,1857,1860,1862,1863,1864,1865,1829,1861,1869,1870,1871,1872,1877," +
            "1878,1879,1881,1883,1884,1885,1886,1887,1888,1889,1890,1891,1892,1893,1894,1897," +
            "1902,1903,1904,1905,1906,1907,1908,1909,1910,1911,1914,1915,1916,1917,1918,1922," +
            "1923,1924,1926,1927,1928,1929,1930,1931,1932,1933,1937,1938,1939,1940,1941,1942," +
            "1943,1944,1945,1946,1948,1949,1950,1951,1954,1955,1956,1957,1958,1959,1960,1961," +
            "1963,1964,1965,1967,1968,1970,1971,1972,1973,1976,1977,1978,1979,1980,1981,1982," +
            "1983,1984,1985,1988,1989,1990,1991,1998,1999,2000,")]
        public string SkinIds {
            get {
                return ((string)(this["SkinIds"]));
            }
            set {
                this["SkinIds"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsRandomSkin {
            get {
                return ((bool)(this["IsRandomSkin"]));
            }
            set {
                this["IsRandomSkin"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("5001,5003,5004,5022,5028,5029,5034,5066,5067,5068,5076,5077,5078,5079,5080,5081,5" +
            "082,5083,5084,5085,5086,5087,5088,5089,5090,5091,5092,5093,5094,5095,5096,5097,5" +
            "098,5099,5100,5101,5102,5103,5104,5105,5106,5107,5108,5109,5110,5129,5144,5145,5" +
            "146,5147,5153,5154,5155,5156,5165,5166,5167,5168,5169,5170,5171,5172,5173,5174,5" +
            "175,5176,5177,5178,5179,5180,5181,5182,5183,5184,5185,5186,5187,5188,5189,5190,5" +
            "191,5192,5193,5194,5195,5196,5197,5198,5199,5201,5202,5203,5204,5205,5206,5207,5" +
            "208,5209,5210,5211,5212,5213,5214,5215,5216,5217,5218,5219,5220,5221,5222,5223,5" +
            "224,5225,5226,5227,5228,5229,5230,5231,5232,5239,5240,5241,5242,5243,5244,5245,5" +
            "246,5247,5248,5249,5250,5251,5252,5253,5254,5255,5256,5257,5258,5259,5260,5261,5" +
            "262,5263,5264,5265,5266,5267,5268,5269,5270,5271,5272,5273,5274,5275,5276,5277,5" +
            "278,5279,5280,5281,5282,5283,5284,5285,5286,5287,5288,5289,5290,5318,5319,5320,5" +
            "321,5322,5323,5324,5325,5326,5327,5328,5329,5330,5331,5332,5333,5334,5335,5336,5" +
            "337,5338,5339,5340,5341,5342,5343,5358,5359,5360,5361,5362,5363,5364,5365,5366,5" +
            "367,5368,5369,5370,5371,5372,5373,5374,5375,5376,5377,5378,5379,5380,5381,5382,5" +
            "383,5384,5385,5386,5387,5388,5389,5390,5391,5392,5393,5394,5395,5396,5397,5398,5" +
            "399,5400,5401,5402,5418,5434,5437,5432,5441,5465,5466,5479,5478,5477,5480,5481,5" +
            "482,5483,5484,5485,5486,5487,5488,5489,5510,5512,5517,5529,5530,5531,5532,5566,5" +
            "568,5569,5567,5570,5571,5572,5573,5574,5575,5576,5577,5578,5579,5580,5581,5582,5" +
            "583,5584,5585,5586,5587,5588,5589,5590,5591,5592,5593,5595,5596,5597,5598,5599,5" +
            "600,5602,5603,5604,5609,5764,5765,5767,5768,5769,5049,2690,3011,3083,5020,5038,5" +
            "040,5041,5043,5048,5050,5114,5115,5116,5117,5118,5119,5120,5121,5122,5123,5124,5" +
            "125,5126,5127,5128,5129,5130,5131,5132,5133,5134,5135,5136,5137,5138,5139,5140,5" +
            "141,5142,5143,5144,5145,5146,5147,5148,5149,5150,5151,5152,5153,5154,5155,5156,5" +
            "157,5158,5159,5160,5161,5162,5163,5164,5165,5166,5167,5168,5169,5170,5171,5172,5" +
            "173,5174,5175,5176,5177,5178,5179,5180,5181,5182,5183,5184,5185,5186,5187,5188,5" +
            "189,5190,5191,5192,5193,5195,5196,5197,5198,5199,5200,5201,5202,5203,5204,5205,5" +
            "206,5207,5208,5209,5210,5211,5212,5213,5214,5215,5216,5217,5218,5219,5220,5221,5" +
            "222,5223,5224,5225,5226,5227,5228,5229,5230,5231,5232,5239,5240,5241,5242,5243,5" +
            "244,5245,5246,5247,5248,5249,5250,5251,5252,5253,5254,5255,5256,5257,5258,5259,5" +
            "260,5261,5262,5263,5264,5265,5266,5267,5268,5270,5271,5272,5273,5278,5279,5280,5" +
            "281,5282,5283,5284,5285,5286,5287,5288,5289,5290,5291,5292,5293,5294,5295,5296,5" +
            "297,5298,5299,5300,5301,5302,5303,5304,5305,5306,5307,5308,5309,5310,5311,5312,5" +
            "313,5314,5315,5316,5317,5318,5319,5320,5321,5322,5323,5324,5325,5326,5327,5328,5" +
            "329,5330,5331,5332,5333,5334,5335,5336,5337,5338,5339,5340,5341,5342,5343,5344,5" +
            "345,5346,5347,5348,5349,5350,5351,5352,5353,5354,5355,5356,5358,5359,5360,5361,5" +
            "362,5363,5364,5365,5366,5367,5368,5369,5370,5371,5372,5374,5375,5376,5377,5378,5" +
            "379,5380,5381,5382,5383,5384,5385,5386,5387,5388,5389,5390,5391,5392,5393,5394,5" +
            "395,5396,5397,5398,5399,5400,5401,5402,5405,5406,5407,5408,5409,5410,5411,5412,5" +
            "413,5414,5415,5416,5417,5418,5419,5420,5421,5422,5423,5424,5425,5426,5427,5428,5" +
            "429,5430,5431,5432,5433,5434,5435,5436,5437,5438,5439,5440,5441,5442,5443,5444,5" +
            "445,5446,5447,5448,5449,5450,5451,5452,5453,5454,5455,5456,5457,5458,5459,5460,5" +
            "461,5462,5463,5464,5465,5466,5467,5468,5469,5470,5471,5472,5473,5474,5475,5476,5" +
            "477,5478,5479,5480,5481,5482,5483,5485,5486,5490,5491,5492,5493,5495,5496,5497,5" +
            "499,5500,5501,5502,5504,5505,5506,5507,5508,5511,5512,5513,5514,5515,5516,5517,5" +
            "518,5519,5520,5521,5522,5523,5524,5527,5529,5530,5531,5532,5533,5534,5535,5536,5" +
            "537,5538,5539,5540,5541,5542,5543,5544,5545,5546,5547,5548,5549,5550,5551,5552,5" +
            "553,5554,5555,5556,5557,5558,5559,5560,5561,5562,5563,5564,5565,5566,5567,5568,5" +
            "569,5570,5571,5572,5573,5574,5575,5576,5577,5578,5581,5582,5583,5584,5585,5586,5" +
            "587,5588,5589,5590,5591,5592,5593,5595,5596,5597,5598,5599,5600,5602,5603,5604,5" +
            "768,5769,5781,5800,1300067,1300068,1300081,1300082,1300105,1300106,1300107,13001" +
            "08,1300125,1300174,1300228,1300229,1300304,1300305,1300370,1300371,1300433,13004" +
            "58,1300594,1300604,1300605,1300606,1300674,1300748,1300749,1300750,1300799,13008" +
            "73,1300943,1300948,1300999,1301014,1400005,1400006,1400007,1400008,1400009,14000" +
            "10,1400011,1400012,1400013,1400014,1400015,1400017,1400018,1400019,1400020,14000" +
            "21,1400022,1400023,1400024,1400025,1400026,1400027,1400028,1400029,1400030,14000" +
            "31,1400032,1400033,1400034,1400035,1400036,1400037,1400038,1400039,1400040,14000" +
            "41,1400042,1400043,1400046,1400047,1400048,1400049,1400050,1400051,1400052,14000" +
            "53,1400054,1400055,1400056,1400057,1400058,1400059,1400060,1400061,1400062,14000" +
            "63,1400064,1400065,1400066,1400067,1400068,1400069,1400070,1400071,1400072,14000" +
            "73,1400074,1400075,1400076,1400077,1400078,1400079,1400080,1400081,1400082,14000" +
            "83,1400084,1400085,1400086,1400087,1400088,1400089,1400090,1400091,1400092,14000" +
            "93,1400094,1400095,1400096,1400097,1400098,1400099,1400100,1400101,1400102,14001" +
            "03,1400104,1400105,1400106,1400107,1400108,1400109,1400110,1400111,1400112,14001" +
            "13,1400114,1400115,1400116,1400117,1400118,1400119,1400120,1400121,1400122,14001" +
            "23,1400124,1400125,1400127,1400128,1400191,1400196,1400197,1400199,1400200,14002" +
            "03,1400211,1400270,1400271,1400272,1400273,1400274,1400275,1400276,1400428,14004" +
            "76,1400484,1400524,1400550,1400574,1400581,1400585,1400591,1400598,1400602,")]
        public string SkinBlackList {
            get {
                return ((string)(this["SkinBlackList"]));
            }
            set {
                this["SkinBlackList"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("{}")]
        public string SeerCloth {
            get {
                return ((string)(this["SeerCloth"]));
            }
            set {
                this["SeerCloth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string BrowserFont {
            get {
                return ((string)(this["BrowserFont"]));
            }
            set {
                this["BrowserFont"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool IsH5First {
            get {
                return ((bool)(this["IsH5First"]));
            }
            set {
                this["IsH5First"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("976")]
        public decimal WinWidth {
            get {
                return ((decimal)(this["WinWidth"]));
            }
            set {
                this["WinWidth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("624")]
        public decimal WinHeight {
            get {
                return ((decimal)(this["WinHeight"]));
            }
            set {
                this["WinHeight"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsChangeBackground {
            get {
                return ((bool)(this["IsChangeBackground"]));
            }
            set {
                this["IsChangeBackground"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsChangeAdPanel {
            get {
                return ((bool)(this["IsChangeAdPanel"]));
            }
            set {
                this["IsChangeAdPanel"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string AutoExecuteSoftwarePath1 {
            get {
                return ((string)(this["AutoExecuteSoftwarePath1"]));
            }
            set {
                this["AutoExecuteSoftwarePath1"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("998")]
        public int SkinRangeFloor {
            get {
                return ((int)(this["SkinRangeFloor"]));
            }
            set {
                this["SkinRangeFloor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2147483647")]
        public int SkinRangeCeiling {
            get {
                return ((int)(this["SkinRangeCeiling"]));
            }
            set {
                this["SkinRangeCeiling"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string RandomSkinExclusion {
            get {
                return ((string)(this["RandomSkinExclusion"]));
            }
            set {
                this["RandomSkinExclusion"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsChangeH5LoginBg2024 {
            get {
                return ((bool)(this["IsChangeH5LoginBg2024"]));
            }
            set {
                this["IsChangeH5LoginBg2024"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool IsUseSocketHack {
            get {
                return ((bool)(this["IsUseSocketHack"]));
            }
            set {
                this["IsUseSocketHack"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string AutoExecuteSoftwarePath2 {
            get {
                return ((string)(this["AutoExecuteSoftwarePath2"]));
            }
            set {
                this["AutoExecuteSoftwarePath2"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string AutoExecuteSoftwarePath3 {
            get {
                return ((string)(this["AutoExecuteSoftwarePath3"]));
            }
            set {
                this["AutoExecuteSoftwarePath3"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public string FlashZoom {
            get {
                return ((string)(this["FlashZoom"]));
            }
            set {
                this["FlashZoom"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsChangeVipIcon {
            get {
                return ((bool)(this["IsChangeVipIcon"]));
            }
            set {
                this["IsChangeVipIcon"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("{\r\n  \"压血\": \"WxFightHandler.OnFirstRound = (fightStartInfo) => {\\n  WxFightHandler" +
            ".Utils.UseSkill(0);\\n};\\nWxFightHandler.OnUseSkill = (mySkillInfo,enemySkillInfo" +
            ") => {\\n  if (mySkillInfo.remainHP !== 0) {\\n    WxFightHandler.Utils.UseSkill(0" +
            ");\\n  }\\n  else {\\n    WxFightHandler.Utils.ChangePetByID(mySkillInfo,[]);\\n  }\\" +
            "n};\\nWxFightHandler.OnChangePet = (petInfo) => {\\n  WxFightHandler.Utils.UseSkil" +
            "l(0);\\n};\\nWxFightHandler.OnFightOver = (fightOverInfo) => {\\n  WxFightHandler.U" +
            "tils.StopAutoFight();\\n};\",\r\n  \"奇镰解放\": \"WxFightHandler.OnFirstRound = (fightStar" +
            "tInfo) => {\\n  WxFightHandler.Utils.UseSkill(36481);\\n};\\nWxFightHandler.OnUseSk" +
            "ill = (mySkillInfo,enemySkillInfo) => {\\n  if (mySkillInfo.remainHP !== 0) {\\n  " +
            "  WxFightHandler.Utils.UseSkill(36481);\\n  }\\n  else {\\n    console.log(\'Pet dea" +
            "d!\')\\n  }\\n};\\nWxFightHandler.OnChangePet = (petInfo) => {\\n};\\nWxFightHandler.O" +
            "nFightOver = (fightOverInfo) => {\\n};\",\r\n  \"月华\": \"WxFightHandler.OnFirstRound = " +
            "(fightStartInfo) => {\\n  WxFightHandler.YQYQ = 36354;\\n  WxFightHandler.BHLH = 3" +
            "6353;\\n  WxFightHandler.UseSkillBHLH = true;\\n  WxFightHandler.Utils.UseSkill(Wx" +
            "FightHandler.YQYQ);\\n};\\n\\nWxFightHandler.OnUseSkill = (mySkillInfo,enemySkillIn" +
            "fo) => {\\n  if (mySkillInfo.remainHP === 0) {\\n    WxFightHandler.Utils.StopAuto" +
            "Fight(); console.log(\'Pet dead!\');\\n    return;\\n  }\\n  for (var skill of mySkil" +
            "lInfo.skillList) {\\n    if (skill[0] === WxFightHandler.YQYQ) {\\n      if (skill" +
            "[1] === 0) {\\n        WxFightHandler.Utils.UsePetItem10PP();\\n        WxFightHan" +
            "dler.UseSkillBHLH = false;\\n        return;\\n      } else { break; }\\n    }\\n  }" +
            "\\n  WxFightHandler.Utils.UseSkill(WxFightHandler.UseSkillBHLH ? WxFightHandler.B" +
            "HLH : WxFightHandler.YQYQ);\\n  WxFightHandler.UseSkillBHLH = !WxFightHandler.Use" +
            "SkillBHLH;\\n};\\n\\nWxFightHandler.OnChangePet = (petInfo) => {};\\nWxFightHandler." +
            "OnFightOver = (fightOverInfo) => {};\",\r\n  \"弹伤_蒂朵\": \"// 草王、蒂朵、克罗、六界 弹伤，1级时空 补刀\\n\\" +
            "nWxFightHandler.OnFirstRound = (fightStartInfo) => {\\n  WxFightHandler.MORUIER =" +
            " 3322;\\n  WxFightHandler.LIUJIE = 3329;\\n  WxFightHandler.KELUO = 2977;\\n  WxFig" +
            "htHandler.DIDUO = 4377;\\n  WxFightHandler.SHIKONG = 3463;\\n  WxFightHandler.IsDI" +
            "DUOFirstUp = true;\\n  WxFightHandler.Utils.UseSkill(0);\\n};\\n\\nWxFightHandler.On" +
            "UseSkill = (mySkillInfo,enemySkillInfo) => {\\n  let petID = WxFightHandler.Utils" +
            ".GetFightingPetID();\\n  if (mySkillInfo.remainHP !== 0) {\\n    WxFightHandler.Ut" +
            "ils.UseSkill(0);\\n  }\\n  else {\\n    let changePetID = 0;\\n    if (WxFightHandle" +
            "r.MORUIER === petID) { changePetID = WxFightHandler.DIDUO; }\\n    else if (WxFig" +
            "htHandler.KELUO === petID) { changePetID = WxFightHandler.DIDUO; }\\n    else if " +
            "(WxFightHandler.DIDUO === petID) { changePetID = WxFightHandler.LIUJIE; }\\n    e" +
            "lse if (WxFightHandler.LIUJIE === petID) { changePetID = WxFightHandler.SHIKONG;" +
            " }\\n    WxFightHandler.Utils.ChangePetByID(mySkillInfo,[changePetID]);\\n  }\\n};\\" +
            "n\\nWxFightHandler.OnChangePet = (petInfo) => {\\n  let petID = petInfo.petID;\\n  " +
            "if (WxFightHandler.DIDUO === petID) {\\n    if (WxFightHandler.IsDIDUOFirstUp) {\\" +
            "n      WxFightHandler.Utils.ChangePetByID(petInfo,[WxFightHandler.KELUO]);\\n    " +
            "  WxFightHandler.IsDIDUOFirstUp = false;\\n    } else {\\n      WxFightHandler.Uti" +
            "ls.UseSkill(35914);\\n    }\\n  }\\n  else if (WxFightHandler.LIUJIE === petID) { W" +
            "xFightHandler.Utils.UseSkill(19314); }\\n  else if (WxFightHandler.SHIKONG === pe" +
            "tID) { WxFightHandler.Utils.UseSkill(31252); }\\n  else { WxFightHandler.Utils.Us" +
            "eSkill(0); }\\n};\\n\\nWxFightHandler.OnFightOver = (fightOverInfo) => {};\",\r\n  \"弹伤" +
            "_表姐\": \"// 表姐、六界 弹伤，圣谱 补刀\\n\\nWxFightHandler.OnFirstRound = (fightStartInfo) => {\\" +
            "n  WxFightHandler.BIAOJIE = 3512;\\n  WxFightHandler.LIUJIEDS = 3329;\\n  WxFightH" +
            "andler.LIUJIESW = 3045;\\n  WxFightHandler.SHENGPU = 5000;\\n  WxFightHandler.Util" +
            "s.UseSkill(31505);\\n};\\n\\nWxFightHandler.OnUseSkill = (mySkillInfo,enemySkillInf" +
            "o) => {\\n  let petID = WxFightHandler.Utils.GetFightingPetID();\\n  if (mySkillIn" +
            "fo.remainHP !== 0) {\\n    WxFightHandler.Utils.UseSkill(mySkillInfo.skillList[0]" +
            "[0]);\\n  }\\n  else {\\n    let changePetIDArray = [];\\n    if (WxFightHandler.BIA" +
            "OJIE === petID) { changePetIDArray.push(WxFightHandler.LIUJIEDS); changePetIDArr" +
            "ay.push(WxFightHandler.LIUJIESW); }\\n    else if (WxFightHandler.LIUJIE === petI" +
            "D) { changePetIDArray[0] = WxFightHandler.SHENGPU; }\\n    WxFightHandler.Utils.C" +
            "hangePetByID(mySkillInfo,changePetIDArray);\\n  }\\n};\\n\\nWxFightHandler.OnChangeP" +
            "et = (petInfo) => {\\n  let petID = petInfo.petID;\\n  if (WxFightHandler.LIUJIEDS" +
            " === petID || WxFightHandler.LIUJIESW ===petID) { WxFightHandler.Utils.UseSkill(" +
            "19314); }\\n  else if (WxFightHandler.SHENGPU === petID) { WxFightHandler.Utils.U" +
            "seSkill(31143); }\\n  else { WxFightHandler.Utils.UseSkill(0); }\\n};\\n\\nWxFightHa" +
            "ndler.OnFightOver = (fightOverInfo) => {};\",\r\n  \"借金火\": \"// 2024 7月 正常运行\\n// 在未来，" +
            "所有的数据结构都可能会发生变动，所以不保证永远有效\\n\\n(async () =>\\n    {\\n      let FIRE_BLUE_SMALL = 2;" +
            "\\n      let FIRE_PURPLE_SMALL = 3;\\n      let FIRE_GOLD_SMALL = 4;\\n      let FI" +
            "RE_GREEN_SMALL = 5;\\n      let FIRE_GREEN_BIG = 6;\\n      let FIRE_BLUE_BIG = 7;" +
            "\\n      let FIRE_PURPLE_BIG = 8;\\n      let FIRE_GOLD_BIG = 9;\\n    \\n      func" +
            "tion ReadInt(data)\\n      {\\n        return (data.byteArray[data.position++] << " +
            "24) + (data.byteArray[data.position++] << 16) + (data.byteArray[data.position++]" +
            " << 8) + data.byteArray[data.position++];\\n      }\\n    \\n      function ReadByt" +
            "e(data)\\n      {\\n        return data.byteArray[data.position++];\\n      }\\n    " +
            "\\n      class UserInfo\\n      {\\n        constructor(data)\\n        {\\n         " +
            " data.position += 4; // 不需要的数据就跳过\\n          this.userID = ReadInt(data);\\n     " +
            "     data.position += 16;\\n          this.curTitle = ReadInt(data); // 称号\\n     " +
            "     data.position += 137;\\n          let loopTimes = ReadInt(data); // 这里有一段循环\\" +
            "n          for (let i = 0; i < loopTimes; ++i)\\n          {\\n            ReadInt" +
            "(data);\\n          }\\n          data.position += 60;\\n          // 套装\\n         " +
            " loopTimes = ReadInt(data);\\n          this.clothes = [];\\n          for (let i " +
            "= 0; i < loopTimes; ++i)\\n          {\\n            this.clothes[i] = ReadInt(dat" +
            "a);\\n            ReadInt(data);\\n          }\\n          data.position += 4;\\n   " +
            "       this.fireBuff = ReadByte(data);\\n          data.position += 28;\\n        " +
            "}\\n      }\\n    \\n      // 获取\\n      let data = {};\\n      data.byteArray = awai" +
            "t WxFightHandler.Utils.SendAsync(2003,[]);\\n      data.position = 0;\\n      \\n  " +
            "    // 解析\\n      let playerCount = ReadInt(data);\\n      for (let i = 0; i < pla" +
            "yerCount; ++i)\\n      {\\n        let player = new UserInfo(data);\\n        if (p" +
            "layer.fireBuff == FIRE_GOLD_BIG || player.fireBuff == FIRE_GOLD_SMALL) \\n       " +
            " {\\n          WxFightHandler.Utils.Send(4292,player.userID); console.log(\'借火成功\')" +
            "; return;\\n        }\\n      }\\n      console.log(\'借火失败\');\\n    })();\"\r\n}")]
        public string FlashFightTemplate {
            get {
                return ((string)(this["FlashFightTemplate"]));
            }
            set {
                this["FlashFightTemplate"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("{\"换色\": \"NonoColorChangePanel\"}")]
        public string ActivityCollection {
            get {
                return ((string)(this["ActivityCollection"]));
            }
            set {
                this["ActivityCollection"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool AutoLoadActivities {
            get {
                return ((bool)(this["AutoLoadActivities"]));
            }
            set {
                this["AutoLoadActivities"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool AutoLoadFightHandler {
            get {
                return ((bool)(this["AutoLoadFightHandler"]));
            }
            set {
                this["AutoLoadFightHandler"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool AutoLoadPetBag {
            get {
                return ((bool)(this["AutoLoadPetBag"]));
            }
            set {
                this["AutoLoadPetBag"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool AutoLoadScreenShot {
            get {
                return ((bool)(this["AutoLoadScreenShot"]));
            }
            set {
                this["AutoLoadScreenShot"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool AutoLoadH5Pack {
            get {
                return ((bool)(this["AutoLoadH5Pack"]));
            }
            set {
                this["AutoLoadH5Pack"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool AutoLoadFlashMap {
            get {
                return ((bool)(this["AutoLoadFlashMap"]));
            }
            set {
                this["AutoLoadFlashMap"] = value;
            }
        }
    }
}
